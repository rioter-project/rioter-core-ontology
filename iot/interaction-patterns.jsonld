{
  "@context": {
    "iot": "http://iotschema.org/",
    "rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
    "rdfs": "http://www.w3.org/2000/01/rdf-schema#",
    "schema": "http://schema.org/"
  },
  "@graph": [
    {
		"@id": "iot:Temperature",
		"@type": "rdfs:Class",
		"rdfs:comment": "Temperature interaction property",
		"rdfs:label": "Temperature",
		"rdfs:subClassOf": { "@id": "iot:Property" },
		"iot:providesOutputData": {
			"@id": "iot:TemperatureData"
		},
		"iot:writable" : "schema:False",
		"iot:observable" : "schema:Boolean"
    },
	{
		"@id": "iot:AirTemperature",
		"@type": "rdfs:Class",
		"rdfs:comment": "Air temperature interaction property",
		"rdfs:label": "Air Temperature",
		"rdfs:subClassOf": { "@id": "iot:Temperature" },
		"iot:providesOutputData": {
			"@id": "iot:TemperatureData"
		},
		"iot:writable" : "schema:False",
		"iot:observable" : "schema:Boolean"
    },
    {
		"@id": "iot:TemperatureData",
		"@type": "rdfs:Class",
		"rdfs:comment": " Temperature data",
		"rdfs:label": "TemperatureData",
		"rdfs:subClassOf": { "@id": "schema:PropertyValue" },
		"schema:propertyType": { "@id": "schema:Float" },
		"schema:unitCode": { "@id": "iot:TemperatureUnit" },
		"schema:minValue": "schema:Float",
		"schema:maxValue": "schema:Float"
    },
    {
		"@id": "iot:TargetTemperature",
		"@type": "rdfs:Class",
		"iot:acceptsInputData": {
		"@id": "iot:TemperatureData"
		},
		"iot:providesOutputData": {
			"@id": "iot:TemperatureData"
		},
		"rdfs:comment": "Target temperature",
		"rdfs:label": "TargetTemperature",
		"rdfs:subClassOf": { "@id": "iot:Property" },
		"iot:writable" : "schema:True",
		"iot:observable" : "schema:Boolean"
    },
    {
		"@id": "iot:OperationStatus",
		"@type": "rdfs:Class",
		"iot:providesOutputData": {
			"@id": "iot:StatusData"
		},
		"rdfs:comment": "Operation status of a state.",
		"rdfs:label": "OperationStatus",
		"rdfs:subClassOf": {
			"@id": "iot:Property"
      },
		"iot:writable" : "schema:False",
		"iot:observable" : "schema:Boolean"
    },
    {
		"@id": "iot:StatusData",
		"@type": "rdfs:Class",
		"rdfs:comment": "StatusData",
		"rdfs:label": "StatusData",
		"rdfs:subClassOf": {
			"@id": "schema:PropertyValue"
		},
		"schema:propertyType": {
			"@id": "schema:Boolean"
		}
    },
    {
		"@id": "iot:SwitchStatus",
		"@type": "rdfs:Class",
		"iot:providesOutputData": {
			"@id": "schema:Boolean"
		},
		"rdfs:comment": "Binary switch status (on/off property).",
		"rdfs:label": "SwitchStatus",
		"rdfs:subClassOf": {
			"@id": "iot:Property"
		},
		"iot:writable" : "schema:False",
		"iot:observable" : "schema:Boolean"
    },
	{
		"@id": "iot:TurnOn",
		"@type": "rdfs:Class",
		"rdfs:comment": "Turn on a switch.",
		"rdfs:label": "TurnOn",
		"rdfs:subClassOf": {
			"@id": "iot:Action"
		}
	},
	{
		"@id": "iot:TurnOff",
		"@type": "rdfs:Class",
		"rdfs:comment": "Turn off a switch.",
		"rdfs:label": "TurnOff",
		"rdfs:subClassOf": {
			"@id": "iot:Action"
		}
	},
	{
		"@id": "iot:ToggleAction",
		"@type": "rdfs:Class",
		"rdfs:comment": "Toggles a boolean state on and off.",
		"rdfs:label": "ToggleAction",
		"rdfs:subClassOf": {
			"@id": "iot:Action"
		}
	},
	{
		"@id": "iot:SetDimmer",
		"@type": "rdfs:Class",
		"iot:acceptsInputData": {
			"@id": "iot:DimmerData"
		},
		"rdfs:comment": "Set quantized representation for brightness (e.g., in the range 0-100)",
		"rdfs:label": "SetDimmer",
		"rdfs:subClassOf": {
			"@id": "iot:Action"
		}
	},
	{
		"@id": "iot:CurrentDimmer",
		"@type": "rdfs:Class",
		"iot:providesOutputData": {
			"@id": "iot:DimmerData"
		},
		"rdfs:comment": "Get quantized representation of the current sensed value for brightness (e.g., in the range 0-100)",
		"rdfs:label": "CurrentDimmer",
		"rdfs:subClassOf": {
			"@id": "iot:Property"
		},
		"iot:writable" : "schema:False",
		"iot:observable" : "schema:Boolean"
	},
	{
		"@id": "iot:RampTime",
		"@type": "rdfs:Class",
		"iot:acceptsInputData": {
			"@id": "iot:RampTimeData"
		},
		"rdfs:comment": "Actual speed of changing between 2 dimming values",
		"rdfs:label": "RampTime",
		"rdfs:subClassOf": {
			"@id": "iot:Property"
		},
		"iot:writable" : "schema:True",
		"iot:observable" : "schema:Boolean"
	},
	{
		"@id": "iot:RampTimeData",
		"@type": "rdfs:Class",
		"rdfs:comment": "Ramp time data",
		"rdfs:label": "RampTimeData",
		"rdfs:subClassOf": { "@id": "schema:PropertyValue" },
		"schema:propertyType": { "@id": "schema:Integer" },
		"schema:minValue": "schema:Integer",
		"schema:maxValue": "schema:Integer"
    },
    {
		"@id": "iot:RunMode",
		"@type": "rdfs:Class",
		"iot:acceptsInputData": {
			"@id": "iot:RunModeData"
		},
		"iot:providesOutputData": {
			"@id": "iot:RunModeData"
		},
		"rdfs:comment": "Run modes of an air conditioner",
		"rdfs:label": "RunMode",
		"rdfs:subClassOf": {
			"@id": "iot:Property"
      },
		"iot:writable" : "schema:True",
		"iot:observable" : "schema:Boolean"
    },
    {
		"@id": "iot:RunModeData",
		"@type": "rdfs:Class",
		"rdfs:comment": "Run modes",
		"rdfs:label": "RunModeData",
		"rdfs:subClassOf": {
			"@id": "schema:PropertyValue"
		},
		"schema:propertyType": {
			"@id": "iot:RunModeType"
		}
    },
	{
		"@id": "iot:RunModeType",
		"@type": "rdfs:Class",
		"rdfs:comment": "An enumeration of run modes of an air conditioner.",
		"rdfs:label": "RunModeType",
		"rdfs:subClassOf": {
			"@id": "schema:Enumeration"
		}
	},
    {
		"@id": "iot:CoolMode",
		"@type": "iot:RunModeType",
		"rdfs:comment": "Cool mode",
		"rdfs:label": "CoolMode"
	},
    {
		"@id": "iot:FanMode",
		"@type": "iot:RunModeType",
		"rdfs:comment": "Fan Mode",
		"rdfs:label": "FanMode"
	},
    {
		"@id": "iot:DryMode",
		"@type": "iot:RunModeType",
		"rdfs:comment": "Dry Mode",
		"rdfs:label": "DryMode"
	},
    {
		"@id": "iot:EnergyOrPowerSaverMode",
		"@type": "iot:RunModeType",
		"rdfs:comment": "Energy Or Power Saver Mode",
		"rdfs:label": "EnergyOrPowerSaverMode"
	},
    {
		"@id": "iot:SleepMode",
		"@type": "iot:RunModeType",
		"rdfs:comment": "Sleep Mode",
		"rdfs:label": "SleepMode"
	},
    {
		"@id": "iot:CountDown",
		"@type": "rdfs:Class",
		"iot:acceptsInputData": {
		"@id": "iot:TimeData"
		},
		"iot:providesOutputData": {
			"@id": "iot:TimeData"
		},
		"rdfs:comment": "Count-down or Timer",
		"rdfs:label": "CountDown",
		"rdfs:subClassOf": {
			"@id": "iot:Property"
      },
		"iot:writable" : "schema:True",
		"iot:observable" : "schema:Boolean"
    },
    {
		"@id": "iot:TimeData",
		"@type": "rdfs:Class",
		"rdfs:comment": "Time data",
		"rdfs:label": "TimeData",
		"rdfs:subClassOf": {
			"@id": "schema:PropertyValue"
		},
		"schema:propertyType": {
			"@id": "schema:Number"
		},
		"schema:unitCode": {
			"@id": "iot:TimeUnitType"
		}
    },
    {
		"@id": "iot:WindStrength",
		"@type": "rdfs:Class",
		"iot:acceptsInputData": {
		"@id": "iot:WindData"
		},
		"iot:providesOutputData": {
			"@id": "iot:WindData"
		},
		"rdfs:comment": "Wind strength",
		"rdfs:label": "WindStrength",
		"rdfs:subClassOf": {
			"@id": "iot:Property"
      },
		"iot:writable" : "schema:True",
		"iot:observable" : "schema:Boolean"
    },
    {
		"@id": "iot:WindData",
		"@type": "rdfs:Class",
		"rdfs:comment": "Wind data",
		"rdfs:label": "WindData",
		"rdfs:subClassOf": {
			"@id": "schema:PropertyValue"
		},
		"schema:propertyType": {
			"@id": "schema:Integer"
		},
		"schema:minValue": "schema:Integer",
		"schema:maxValue": "schema:Integer"
    },
    {
		"@id": "iot:SetLevel",
		"@type": "rdfs:Class",
		"iot:acceptsInputData": [
		{
			"@id": "iot:TransitionTimeData"
		},
		{
			"@id": "iot:LevelData"
		}
		],
		"rdfs:comment": "Set level Action",
		"rdfs:label": "SetLevel",
		"rdfs:subClassOf": {
		"@id": "iot:Action"
      }
    },
	{
		"@id": "iot:MotionDetected",
		"@type": "rdfs:Class",
		"rdfs:comment": "Detects motion",
		"rdfs:label": "MotionDetected",
		"rdfs:subClassOf": { "@id": "iot:Event" },
		"iot:providesOutputData": {
			"@id": "iot:StateData"
		}
    },
    {
		"@id": "iot:TransitionTime",
		"@type": "rdfs:Class",
		"iot:acceptsInputData": {
		"@id": "iot:TransitionTimeData"
		},
		"iot:providesOutputData": {
			"@id": "iot:TransitionTimeData"
		},
		"rdfs:comment": "Transition time property",
		"rdfs:label": "TransitionTime",
		"rdfs:subClassOf": {
			"@id": "iot:Property"
		},
		"iot:writable" : "schema:True",
		"iot:observable" : "schema:Boolean"
    },
    {
		"@id": "iot:LevelData",
		"@type": "rdfs:Class",
		"rdfs:comment": "Level data",
		"rdfs:label": "LevelData",
		"rdfs:subClassOf": {
			"@id": "schema:PropertyValue"
		},
		"schema:propertyType": {
			"@id": "schema:Number"
		},
		"schema:unitCode": {
			"@id": "iot:LevelUnit"
		},
		"schema:minValue": "schema:Integer",
		"schema:maxValue": "schema:Integer"
    },
    {
		"@id": "iot:CurrentLevel",
		"@type": "rdfs:Class",
		"iot:providesOutputData": {
			"@id": "iot:LevelData"
		},
		"rdfs:comment": "Current level property",
		"rdfs:label": "CurrentLevel",
		"rdfs:subClassOf": {
			"@id": "iot:Property"
		},
		"iot:writable" : "schema:False",
		"iot:observable" : "schema:Boolean"
    },
	{
		"@id": "iot:CurrentColour",
		"@type": "rdfs:Class",
		"rdfs:comment": "RGB colour",
		"rdfs:label": "CurrentColour",
		"rdfs:subClassOf": { "@id": "iot:Property" },
		"iot:providesOutputData": [
		{
			"@id": "iot:RColourData"
		},
		{
			"@id": "iot:GColourData"
		},
		{
			"@id": "iot:BColourData"
		}
		],
		"iot:writable" : "schema:False",
		"iot:observable" : "schema:Boolean"
    },
	{
		"@id": "iot:SetColour",
		"@type": "rdfs:Class",
		"rdfs:comment": "RGB colour",
		"rdfs:label": "SetColour",
		"rdfs:subClassOf": { "@id": "iot:Action" },
		"iot:acceptsInputData": [
		{
			"@id": "iot:RColourData"
		},
		{
			"@id": "iot:GColourData"
		},
		{
			"@id": "iot:BColourData"
		}
		]
    },
    {
		"@id": "iot:RColourData",
		"@type": "rdfs:Class",
		"rdfs:comment": "Red component of the RGB colour data",
		"rdfs:label": "RColourData",
		"rdfs:subClassOf": { "@id": "schema:PropertyValue" },
		"schema:propertyType": { "@id": "schema:Integer" },
		"schema:minValue": "schema:Integer",
		"schema:maxValue": "schema:Integer"
    },
	{
		"@id": "iot:GColourData",
		"@type": "rdfs:Class",
		"rdfs:comment": "Green component of the RGB colour data",
		"rdfs:label": "GColourData",
		"rdfs:subClassOf": { "@id": "schema:PropertyValue" },
		"schema:propertyType": { "@id": "schema:Integer" },
		"schema:minValue": "schema:Integer",
		"schema:maxValue": "schema:Integer"
    },
	{
		"@id": "iot:BColourData",
		"@type": "rdfs:Class",
		"rdfs:comment": "Blue component of the RGB colour data",
		"rdfs:label": "BColourData",
		"rdfs:subClassOf": { "@id": "schema:PropertyValue" },
		"schema:propertyType": { "@id": "schema:Integer" },
		"schema:minValue": "schema:Integer",
		"schema:maxValue": "schema:Integer"
    },
	{
		"@id": "iot:DimmerData",
		"@type": "rdfs:Class",
		"rdfs:comment": "Dimmer data",
		"rdfs:label": "DimmerData",
		"rdfs:subClassOf": { "@id": "schema:PropertyValue" },
		"schema:propertyType": { "@id": "schema:Integer" },
		"schema:minValue": "schema:Integer",
		"schema:maxValue": "schema:Integer"
    },
	{
		"@id": "iot:StateData",
		"@type": "rdfs:Class",
		"rdfs:comment": "State data",
		"rdfs:label": "StateData",
		"rdfs:subClassOf": { "@id": "schema:PropertyValue" },
		"schema:propertyType": { "@id": "schema:Boolean" }
    },
    {
		"@id": "iot:MotionType",
		"@type": "rdfs:Class",
		"iot:providesOutputData": {
			"@id": "iot:MotionTypeData"
		},
		"rdfs:comment": "The type of the sensor (for instance PIR type)",
		"rdfs:label": "MotionType",
		"rdfs:subClassOf": {
			"@id": "iot:Property"
      },
		"iot:writable" : "schema:False",
		"iot:observable" : "schema:Boolean"
    },
    {
		"@id": "iot:MotionTypeData",
		"@type": "rdfs:Class",
		"rdfs:comment": "Motion types",
		"rdfs:label": "MotionTypeData",
		"rdfs:subClassOf": {
			"@id": "schema:PropertyValue"
		},
		"schema:propertyType": {
			"@id": "iot:MotionSensorType"
		}
    },
	{
		"@id": "iot:MotionSensorType",
		"@type": "rdfs:Class",
		"rdfs:comment": "The type of the sensor (for instance PIR type).",
		"rdfs:label": "MotionSensorType",
		"rdfs:subClassOf": {
			"@id": "schema:Enumeration"
		}
	},
    {
		"@id": "iot:PIR",
		"@type": "iot:MotionSensorType",
		"rdfs:comment": "Passive infrared sensor",
		"rdfs:label": "PIR"
	},
	{
		"@id": "iot:Illuminance",
		"@type": "rdfs:Class",
		"rdfs:comment": "Illuminance interaction property",
		"rdfs:label": "Illuminance",
		"rdfs:subClassOf": { "@id": "iot:Property" },
		"iot:providesOutputData": [
		{
			"@id": "iot:IlluminanceData"
		}
		],
		"iot:writable" : "schema:False",
		"iot:observable" : "schema:Boolean"
    },
    {
		"@id": "iot:IlluminanceData",
		"@type": "rdfs:Class",
		"rdfs:comment": " Illuminance data",
		"rdfs:label": "IlluminanceData",
		"rdfs:subClassOf": { "@id": "schema:PropertyValue" },
		"schema:propertyType": { "@id": "schema:Float" },
		"schema:unitCode": { "@id": "iot:IlluminanceUnit" },
		"schema:minValue": "schema:Float",
		"schema:maxValue": "schema:Float"
    },
	{
		"@id": "iot:Humidity",
		"@type": "rdfs:Class",
		"rdfs:comment": "Humidity interaction property (e.g., in the range 0-100)",
		"rdfs:label": "Humidity",
		"rdfs:subClassOf": { "@id": "iot:Property" },
		"iot:providesOutputData": [
		{
			"@id": "iot:HumidityData"
		}
		],
		"iot:writable" : "schema:False",
		"iot:observable" : "schema:Boolean"
    },
    {
		"@id": "iot:HumidityData",
		"@type": "rdfs:Class",
		"rdfs:comment": " Humidity data",
		"rdfs:label": "HumidityData",
		"rdfs:subClassOf": { "@id": "schema:PropertyValue" },
		"schema:propertyType": { "@id": "schema:Float" },
		"schema:unitCode": { "@id": "iot:PercentUnit" }
    },
	{
		"@id": "iot:TargetHumidity",
		"@type": "rdfs:Class",
		"iot:acceptsInputData": {
			"@id": "iot:HumidityData"
		},
		"rdfs:comment": "Desired value for Humidity (e.g., in the range 0-100)",
		"rdfs:label": "TargetHumidity",
		"rdfs:subClassOf": {
			"@id": "iot:Property"
		},
		"iot:writable" : "schema:True",
		"iot:observable" : "schema:Boolean"
	},
    {
		"@id": "iot:ExpectedDensity",
		"@type": "rdfs:Class",
		"rdfs:comment": "Expected density of a substance.",
		"rdfs:label": "ExpectedDensity",
		"rdfs:subClassOf": { "@id": "iot:Property" },
		"iot:providesOutputData": {
			"@id": "iot:DensityData"
		},
		"iot:writable" : "schema:False",
		"iot:observable" : "schema:Boolean"
    },
    {
		"@id": "iot:DensityData",
		"@type": "rdfs:Class",
		"rdfs:comment": " Density data",
		"rdfs:label": "DensityData",
		"rdfs:subClassOf": { "@id": "schema:PropertyValue" },
		"schema:propertyType": { "@id": "schema:Float" },
		"schema:unitCode": { "@id": "iot:DensityUnit" },
		"schema:minValue": "schema:Float",
		"schema:maxValue": "schema:Float"
    },
	{
		"@id": "iot:ExpectedPressure",
		"@type": "rdfs:Class",
		"iot:providesOutputData": {
			"@id": "iot:PressureData"
		},
		"rdfs:comment": "Expected pressure of a substance.",
		"rdfs:label": "ExpectedPressure",
		"rdfs:subClassOf": {
			"@id": "iot:Property"
		},
		"iot:writable" : "schema:False",
		"iot:observable" : "schema:Boolean"
	},
	{
		"@id": "iot:ExpectedUpstreamPressure",
		"@type": "rdfs:Class",
		"iot:providesOutputData": {
			"@id": "iot:PressureData"
		},
		"rdfs:comment": "Expected upstream pressure",
		"rdfs:label": "ExpectedUpstreamPressure",
		"rdfs:subClassOf": {
			"@id": "iot:Property"
		},
		"iot:writable" : "schema:False",
		"iot:observable" : "schema:Boolean"
	},
    {
		"@id": "iot:PressureData",
		"@type": "rdfs:Class",
		"rdfs:comment": " Pressure data",
		"rdfs:label": "PressureData",
		"rdfs:subClassOf": { "@id": "schema:PropertyValue" },
		"schema:propertyType": { "@id": "schema:Float" },
		"schema:unitCode": { "@id": "iot:PressureUnit" },
		"schema:minValue": "schema:Float",
		"schema:maxValue": "schema:Float"
    },
	{
		"@id": "iot:OverflowStatus",
		"@type": "rdfs:Class",
		"iot:providesOutputData": {
			"@id": "schema:Boolean"
		},
		"rdfs:comment": "Overflow status",
		"rdfs:label": "OverflowStatus",
		"rdfs:subClassOf": {
			"@id": "iot:Property"
		},
		"iot:writable" : "schema:False",
		"iot:observable" : "schema:Boolean"
	},
	{
		"@id": "iot:ExpectedFlowRate",
		"@type": "rdfs:Class",
		"iot:providesOutputData": {
			"@id": "iot:FlowRateData"
		},
		"rdfs:comment": "Expected flow rate of a substance.",
		"rdfs:label": "ExpectedFlowRate",
		"rdfs:subClassOf": {
			"@id": "iot:Property"
		},
		"iot:writable" : "schema:False",
		"iot:observable" : "schema:Boolean"
	},
    {
		"@id": "iot:FlowRateData",
		"@type": "rdfs:Class",
		"rdfs:comment": " Flow rate data",
		"rdfs:label": "FlowRateData",
		"rdfs:subClassOf": { "@id": "schema:PropertyValue" },
		"schema:propertyType": { "@id": "schema:Float" },
		"schema:unitCode": { "@id": "iot:FlowRateUnit" },
		"schema:minValue": "schema:Float",
		"schema:maxValue": "schema:Float"
    },
    {
		"@id": "iot:ExpectedAmbientTemperature",
		"@type": "rdfs:Class",
		"rdfs:comment": "The expected temperature of the surrounding environment (air, liquid etc.). ",
		"rdfs:label": "ExpectedAmbientTemperature",
		"rdfs:subClassOf": { "@id": "iot:Temperature" },
		"iot:providesOutputData": {
			"@id": "iot:TemperatureData"
		},
		"iot:writable" : "schema:False"
    },
    {
		"@id": "iot:ExpectedFloatImmersionDepth",
		"@type": "rdfs:Class",
		"rdfs:comment": "The expected immersion depth of liquid in float sensor. ",
		"rdfs:label": "ExpectedFloatImmersionDepth",
		"rdfs:subClassOf": { "@id": "iot:Property" },
		"iot:providesOutputData": {
			"@id": "iot:ImmersionDepthData"
		},
		"iot:writable" : "schema:False",
		"iot:observable" : "schema:Boolean"
    },
    {
		"@id": "iot:ImmersionDepthData",
		"@type": "rdfs:Class",
		"rdfs:comment": " Liquid immersion depth data",
		"rdfs:label": "ImmersionDepthData",
		"rdfs:subClassOf": { "@id": "schema:PropertyValue" },
		"schema:propertyType": { "@id": "schema:Integer" },
		"schema:unitCode": { "@id": "iot:LevelUnit" },
		"schema:minValue": "schema:Integer",
		"schema:maxValue": "schema:Integer"
	},
	{
		"@id": "iot:SoundPressureLevel",
		"@type": "rdfs:Class",
		"rdfs:comment": "SPL interaction property",
		"rdfs:label": "SoundPressureLEvel",
		"rdfs:subClassOf": { "@id": "iot:Property" },
		"iot:providesOutputData": {
			"@id": "iot:SoundPressureData"
		},
		"iot:writable" : "schema:False",
		"iot:observable" : "schema:Boolean"
	},
	{
		"@id": "iot:SoundPressureData",
	    "@type": "rdfs:Class",
		"rdfs:comment": "Sound Pressure data",
		"rdfs:label": "SoundPressureData",
		"rdfs:subClassOf": { "@id": "schema:PropertyValue" },
		"schema:propertyType": { "@id": "schema:Float" },
		"schema:unitCode": { "@id": "iot:SoundPressureUnit" },
		"schema:minValue": "schema:Float",
		"schema:maxValue": "schema:Float"
	},	
	{
		"@id": "iot:TemperatureAlarm",
		"@type": "rdfs:Class",
		"rdfs:comment": "Temperature alarm",
		"rdfs:label": "TemperatureAlarm",
		"rdfs:subClassOf": { "@id": "iot:Event" },
		"iot:providesOutputData": [
			{"@id": "schema:Boolean", "rdfs:label": "AlarmStatus"},
			{"@id": "iot:TemperatureData", "rdfs:label": "CurrentTemperature"},
			{"@id": "iot:TemperatureData", "rdfs:label": "TargerTemperature"}
		]
    },
	{
		"@id": "iot:CarbonDioxideConcentration",
		"@type": "rdfs:Class",
		"rdfs:comment": "Concentration of carbon dioxide (CO2) in ambient air.",
		"rdfs:label": "CarbonDioxideConcentration",
		"rdfs:subClassOf": { "@id": "iot:Property" },
		"iot:providesOutputData": {
			"@id": "iot:CarbonDioxideConcentrationData"
		},
		"iot:writable" : "schema:False",
		"iot:observable" : "schema:Boolean"
	},
	{
		"@id": "iot:CarbonDioxideConcentrationData",
		"@type": "rdfs:Class",
		"rdfs:comment": "Carbon dioxide concentration data.",
		"rdfs:label": "CarbonDioxideConcentrationData",
		"rdfs:subClassOf": { "@id": "schema:PropertyValue" },
		"schema:propertyType": { "@id": "schema:Float" },
		"schema:unitCode": { "@id": "iot:GasInAirConcentrationUnit" }
	},
	{
		"@id": "iot:NitrogenConcentration",
		"@type": "rdfs:Class",
		"rdfs:comment": "Concentration of nitrogen in ambient air.",
		"rdfs:label": "NitrogenConcentration",
		"rdfs:subClassOf": { "@id": "iot:Property" },
		"iot:providesOutputData": {
			"@id": "iot:NitrogenConcentrationData"
		},
		"iot:writable" : "schema:False",
		"iot:observable" : "schema:Boolean"
	},
	{
		"@id": "iot:NitrogenConcentrationData",
		"@type": "rdfs:Class",
		"rdfs:comment": "Nitrogen concentration data.",
		"rdfs:label": "NitrogenConcentrationData",
		"rdfs:subClassOf": { "@id": "schema:PropertyValue" },
		"schema:propertyType": { "@id": "schema:Float" },
		"schema:unitCode": { "@id": "iot:GasInAirConcentrationUnit" }
	},
	{
		"@id": "iot:OxygenConcentration",
		"@type": "rdfs:Class",
		"rdfs:comment": "Concentration of oxygen in ambient air.",
		"rdfs:label": "OxygenConcentration",
		"rdfs:subClassOf": { "@id": "iot:Property" },
		"iot:providesOutputData": {
			"@id": "iot:OxygenConcentrationData"
		},
		"iot:writable" : "schema:False",
		"iot:observable" : "schema:Boolean"
	},
	{
		"@id": "iot:OxygenConcentrationData",
		"@type": "rdfs:Class",
		"rdfs:comment": "Oxygen concentration data.",
		"rdfs:label": "OxygenConcentrationData",
		"rdfs:subClassOf": { "@id": "schema:PropertyValue" },
		"schema:propertyType": { "@id": "schema:Float" },
		"schema:unitCode": { "@id": "iot:GasInAirConcentrationUnit" }
	},
	{
		"@id": "iot:ArgonConcentration",
		"@type": "rdfs:Class",
		"rdfs:comment": "Concentration of argon in ambient air.",
		"rdfs:label": "ArgonConcentration",
		"rdfs:subClassOf": { "@id": "iot:Property" },
		"iot:providesOutputData": {
			"@id": "iot:ArgonConcentrationData"
		},
		"iot:writable" : "schema:False",
		"iot:observable" : "schema:Boolean"
	},
	{
		"@id": "iot:ArgonConcentrationData",
		"@type": "rdfs:Class",
		"rdfs:comment": "Argon concentration data.",
		"rdfs:label": "ArgonConcentrationData",
		"rdfs:subClassOf": { "@id": "schema:PropertyValue" },
		"schema:propertyType": { "@id": "schema:Float" },
		"schema:unitCode": { "@id": "iot:GasInAirConcentrationUnit" }
	},	
	{
		"@id": "iot:ApparentPowerA",
		"@type": "rdfs:Class",
		"rdfs:comment": "The apparent power for phase A (there exist phases A, B, and C).",
		"rdfs:label": "ApparentPowerA",
		"rdfs:subClassOf": { "@id": "iot:Property" },
		"iot:providesOutputData": {
			"@id": "iot:ApparentPowerData"
		},
		"iot:writable" : "schema:False",
		"iot:observable" : "schema:Boolean"
	},
	{
		"@id": "iot:ApparentPowerData",
		"@type": "rdfs:Class",
		"rdfs:comment": "Data for the apparent power.",
		"rdfs:label": "ApparentPowerData",
		"rdfs:subClassOf": { "@id": "schema:PropertyValue" },
		"schema:propertyType": { "@id": "schema:Float" },
		"schema:unitCode": { "@id": "iot:ApparentPowerUnit" },
		"schema:minValue": "schema:Float",
		"schema:maxValue": "schema:Float"
	},
	{
		"@id": "iot:ApparentPowerB",
		"@type": "rdfs:Class",
		"rdfs:comment": "The apparent power for phase B (there exist phases A, B, and C).",
		"rdfs:label": "ApparentPowerB",
		"rdfs:subClassOf": { "@id": "iot:Property" },
		"iot:providesOutputData": {
			"@id": "iot:ApparentPowerData"
		},
		"iot:writable" : "schema:False",
		"iot:observable" : "schema:Boolean"
	},
	{
		"@id": "iot:ApparentPowerC",
		"@type": "rdfs:Class",
		"rdfs:comment": "The apparent power for phase C (there exist phases A, B, and C).",
		"rdfs:label": "ApparentPowerC",
		"rdfs:subClassOf": { "@id": "iot:Property" },
		"iot:providesOutputData": {
			"@id": "iot:ApparentPowerData"
		},
		"iot:writable" : "schema:False",
		"iot:observable" : "schema:Boolean"
	},
	{
		"@id": "iot:TotalApparentPower",
		"@type": "rdfs:Class",
		"rdfs:comment": "The total apparent power.",
		"rdfs:label": "TotalApparentPower",
		"rdfs:subClassOf": { "@id": "iot:Property" },
		"iot:providesOutputData": {
			"@id": "iot:ApparentPowerData"
		},
		"iot:writable" : "schema:False",
		"iot:observable" : "schema:Boolean"
	},
	{
		"@id": "iot:ActivePowerA",
		"@type": "rdfs:Class",
		"rdfs:comment": "The active power for phase A (there exist phases A, B, and C).",
		"rdfs:label": "ActivePowerA",
		"rdfs:subClassOf": { "@id": "iot:Property" },
		"iot:providesOutputData": {
			"@id": "iot:ActivePowerData"
		},
		"iot:writable" : "schema:False",
		"iot:observable" : "schema:Boolean"
	},
	{
		"@id": "iot:ActivePowerData",
		"@type": "rdfs:Class",
		"rdfs:comment": "Data for the active power",
		"rdfs:label": "ActivePowerData",
		"rdfs:subClassOf": { "@id": "schema:PropertyValue" },
		"schema:propertyType": { "@id": "schema:Float" },
		"schema:unitCode": { "@id": "iot:ActivePowerUnit" },
		"schema:minValue": "schema:Float",
		"schema:maxValue": "schema:Float"
	},
	{
		"@id": "iot:ActivePowerB",
		"@type": "rdfs:Class",
		"rdfs:comment": "The active power for phase B (there exist phases A, B, and C).",
		"rdfs:label": "ActivePowerB",
		"rdfs:subClassOf": { "@id": "iot:Property" },
		"iot:providesOutputData": {
			"@id": "iot:ActivePowerData"
		},
		"iot:writable" : "schema:False",
		"iot:observable" : "schema:Boolean"
	},
	{
		"@id": "iot:ActivePowerC",
		"@type": "rdfs:Class",
		"rdfs:comment": "The active power for phase C (there exist phases A, B, and C).",
		"rdfs:label": "ActivePowerC",
		"rdfs:subClassOf": { "@id": "iot:Property" },
		"iot:providesOutputData": {
			"@id": "iot:ActivePowerData"
		},
		"iot:writable" : "schema:False",
		"iot:observable" : "schema:Boolean"
	},
	{
		"@id": "iot:TotalActivePower",
		"@type": "rdfs:Class",
		"rdfs:comment": "The total active power.",
		"rdfs:label": "TotalActivePower",
		"rdfs:subClassOf": { "@id": "iot:Property" },
		"iot:providesOutputData": {
			"@id": "iot:ActivePowerData"
		},
		"iot:writable" : "schema:False",
		"iot:observable" : "schema:Boolean"
	},
	{
		"@id": "iot:ReactivePowerA",
		"@type": "rdfs:Class",
		"rdfs:comment": "The reactive power for phase A (there exist phases A, B, and C).",
		"rdfs:label": "ReactivePowerA",
		"rdfs:subClassOf": { "@id": "iot:Property" },
		"iot:providesOutputData": {
			"@id": "iot:ReactivePowerData"
		},
		"iot:writable" : "schema:False",
		"iot:observable" : "schema:Boolean"
	},
	{
		"@id": "iot:ReactivePowerData",
		"@type": "rdfs:Class",
		"rdfs:comment": "Data for the reactive power",
		"rdfs:label": "ReactivePowerData",
		"rdfs:subClassOf": { "@id": "schema:PropertyValue" },
		"schema:propertyType": { "@id": "schema:Float" },
		"schema:unitCode": { "@id": "iot:ReactivePowerUnit" },
		"schema:minValue": "schema:Float",
		"schema:maxValue": "schema:Float"
	},
	{
		"@id": "iot:ReactivePowerB",
		"@type": "rdfs:Class",
		"rdfs:comment": "The reactive power for phase B (there exist phases A, B, and C).",
		"rdfs:label": "ReactivePowerB",
		"rdfs:subClassOf": { "@id": "iot:Property" },
		"iot:providesOutputData": {
			"@id": "iot:ReactivePowerData"
		},
		"iot:writable" : "schema:False",
		"iot:observable" : "schema:Boolean"
	},
	{
		"@id": "iot:ReactivePowerC",
		"@type": "rdfs:Class",
		"rdfs:comment": "The reactive power for phase C (there exist phases A, B, and C).",
		"rdfs:label": "ReactivePowerC",
		"rdfs:subClassOf": { "@id": "iot:Property" },
		"iot:providesOutputData": {
			"@id": "iot:ReactivePowerData"
		},
		"iot:writable" : "schema:False",
		"iot:observable" : "schema:Boolean"
	},
	{
		"@id": "iot:TotalReactivePower",
		"@type": "rdfs:Class",
		"rdfs:comment": "The total reactive power.",
		"rdfs:label": "TotalReactivePower",
		"rdfs:subClassOf": { "@id": "iot:Property" },
		"iot:providesOutputData": {
			"@id": "iot:ReactivePowerData"
		},
		"iot:writable" : "schema:False",
		"iot:observable" : "schema:Boolean"
	},
	{
		"@id": "iot:PowerFactorA",
		"@type": "rdfs:Class",
		"rdfs:comment": "The power factor for phase A (there exist phases A, B, and C).",
		"rdfs:label": "PowerFactorA",
		"rdfs:subClassOf": { "@id": "iot:Property" },
		"iot:providesOutputData": {
			"@id": "iot:PowerFactorData"
		},
		"iot:writable" : "schema:False",
		"iot:observable" : "schema:Boolean"
	},
	{
		"@id": "iot:PowerFactorData",
		"@type": "rdfs:Class",
		"rdfs:comment": "Data for the power factor.",
		"rdfs:label": "PowerFactorData",
		"rdfs:subClassOf": { "@id": "schema:PropertyValue" },
		"schema:propertyType": { "@id": "schema:Float" },
		"schema:unitCode": { "@id": "iot:Percent" },
		"schema:minValue": "schema:Float",
		"schema:maxValue": "schema:Float"
	},
	{
		"@id": "iot:PowerFactorB",
		"@type": "rdfs:Class",
		"rdfs:comment": "The power factor for phase B (there exist phases A, B, and C).",
		"rdfs:label": "PowerFactorB",
		"rdfs:subClassOf": { "@id": "iot:Property" },
		"iot:providesOutputData": {
			"@id": "iot:PowerFactorData"
		},
		"iot:writable" : "schema:False",
		"iot:observable" : "schema:Boolean"
	},
	{
		"@id": "iot:PowerFactorC",
		"@type": "rdfs:Class",
		"rdfs:comment": "The power factor for phase C (there exist phases A, B, and C).",
		"rdfs:label": "PowerFactorC",
		"rdfs:subClassOf": { "@id": "iot:Property" },
		"iot:providesOutputData": {
			"@id": "iot:PowerFactorData"
		},
		"iot:writable" : "schema:False",
		"iot:observable" : "schema:Boolean"
	},
	{
		"@id": "iot:TotalPowerFactor",
		"@type": "rdfs:Class",
		"rdfs:comment": "The total power factor.",
		"rdfs:label": "TotalPowerFactor",
		"rdfs:subClassOf": { "@id": "iot:Property" },
		"iot:providesOutputData": {
			"@id": "iot:PowerFactorData"
		},
		"iot:writable" : "schema:False",
		"iot:observable" : "schema:Boolean"
	},
	{
		"@id": "iot:ElectricCurrentA",
		"@type": "rdfs:Class",
		"rdfs:comment": "The current which flows through the phase (line) A (there exist phases A, B, and C).",
		"rdfs:label": "ElectricCurrentA",
		"rdfs:subClassOf": { "@id": "iot:Property" },
		"iot:providesOutputData": {
			"@id": "iot:ElectricCurrentData"
		},
		"iot:writable" : "schema:False",
		"iot:observable" : "schema:Boolean"
	},
	{
		"@id": "iot:ElectricCurrentData",
		"@type": "rdfs:Class",
		"rdfs:comment": "Electric current data.",
		"rdfs:label": "ElectricCurrentData",
		"rdfs:subClassOf": { "@id": "schema:PropertyValue" },
		"schema:propertyType": { "@id": "schema:Float" },
		"schema:unitCode": { "@id": "iot:ElectricCurrentUnit" },
		"schema:minValue": "schema:Float",
		"schema:maxValue": "schema:Float"
	},
	{
		"@id": "iot:ElectricCurrentB",
		"@type": "rdfs:Class",
		"rdfs:comment": "The current which flows through the phase (line) B (there exist phases A, B, and C).",
		"rdfs:label": "ElectricCurrentB",
		"rdfs:subClassOf": { "@id": "iot:Property" },
		"iot:providesOutputData": {
			"@id": "iot:ElectricCurrentData"
		},
		"iot:writable" : "schema:False",
		"iot:observable" : "schema:Boolean"
	},
	{
		"@id": "iot:ElectricCurrentC",
		"@type": "rdfs:Class",
		"rdfs:comment": "The current which flows through the phase (line) C (there exist phases A, B, and C).",
		"rdfs:label": "ElectricCurrentC",
		"rdfs:subClassOf": { "@id": "iot:Property" },
		"iot:providesOutputData": {
			"@id": "iot:ElectricCurrentData"
		},
		"iot:writable" : "schema:False",
		"iot:observable" : "schema:Boolean"
	},
	{
		"@id": "iot:AverageElectricCurrent",
		"@type": "rdfs:Class",
		"rdfs:comment": "The average electric current.",
		"rdfs:label": "AverageElectricCurrent",
		"rdfs:subClassOf": { "@id": "iot:Property" },
		"iot:providesOutputData": {
			"@id": "iot:ElectricCurrentData"
		},
		"iot:writable" : "schema:False",
		"iot:observable" : "schema:Boolean"
	},	
	{
		"@id": "iot:LineFrequency",
		"@type": "rdfs:Class",
		"rdfs:comment": "The nominal frequency of the oscillations of alternating current (AC) in an electric power grid.",
		"rdfs:label": "LineFrequency",
		"rdfs:subClassOf": { "@id": "iot:Property" },
		"iot:providesOutputData": {
			"@id": "iot:LineFrequencyData"
		},
		"iot:writable" : "schema:False",
		"iot:observable" : "schema:Boolean"
	},
	{
		"@id": "iot:LineFrequencyData",
		"@type": "rdfs:Class",
		"rdfs:comment": "Line frequency  data.",
		"rdfs:label": "LineFrequencyData",
		"rdfs:subClassOf": { "@id": "schema:PropertyValue" },
		"schema:propertyType": { "@id": "schema:Float" },
		"schema:unitCode": { "@id": "iot:LineFrequencyUnit" },
		"schema:minValue": "schema:Float",
		"schema:maxValue": "schema:Float"
	},	
	{
		"@id": "iot:PhaseToNeutralVoltageA",
		"@type": "rdfs:Class",
		"rdfs:comment": "The voltage between the phase (line) A and neutral (there exist phases A, B, and C).",
		"rdfs:label": "PhaseToNeutralVoltageA",
		"rdfs:subClassOf": { "@id": "iot:Property" },
		"iot:providesOutputData": {
			"@id": "iot:VoltageData"
		},
		"iot:writable" : "schema:False",
		"iot:observable" : "schema:Boolean"
	},
	{
		"@id": "iot:VoltageData",
		"@type": "rdfs:Class",
		"rdfs:comment": "Voltage data.",
		"rdfs:label": "VoltageData",
		"rdfs:subClassOf": { "@id": "schema:PropertyValue" },
		"schema:propertyType": { "@id": "schema:Float" },
		"schema:unitCode": { "@id": "iot:VoltageUnit" },
		"schema:minValue": "schema:Float",
		"schema:maxValue": "schema:Float"
	},
	{
		"@id": "iot:PhaseToNeutralVoltageB",
		"@type": "rdfs:Class",
		"rdfs:comment": "The voltage between the phase (line) B and neutral (there exist phases A, B, and C).",
		"rdfs:label": "PhaseToNeutralVoltageB",
		"rdfs:subClassOf": { "@id": "iot:Property" },
		"iot:providesOutputData": {
			"@id": "iot:VoltageData"
		},
		"iot:writable" : "schema:False",
		"iot:observable" : "schema:Boolean"
	},
	{
		"@id": "iot:PhaseToNeutralVoltageC",
		"@type": "rdfs:Class",
		"rdfs:comment": "The voltage between the phase (line) C and neutral (there exist phases A, B, and C).",
		"rdfs:label": "PhaseToNeutralVoltageC",
		"rdfs:subClassOf": { "@id": "iot:Property" },
		"iot:providesOutputData": {
			"@id": "iot:VoltageData"
		},
		"iot:writable" : "schema:False",
		"iot:observable" : "schema:Boolean"
	},
	{
		"@id": "iot:PhaseToPhaseVoltageAB",
		"@type": "rdfs:Class",
		"rdfs:comment": "The voltage between phases A and B (line-to-line voltages in a polyphase system).",
		"rdfs:label": "PhaseToPhaseVoltageAB",
		"rdfs:subClassOf": { "@id": "iot:Property" },
		"iot:providesOutputData": {
			"@id": "iot:VoltageData"
		},
		"iot:writable" : "schema:False",
		"iot:observable" : "schema:Boolean"
	},
	{
		"@id": "iot:PhaseToPhaseVoltageBC",
		"@type": "rdfs:Class",
		"rdfs:comment": "The voltage between phases B and C (line-to-line voltages in a polyphase system).",
		"rdfs:label": "PhaseToPhaseVoltageBC",
		"rdfs:subClassOf": { "@id": "iot:Property" },
		"iot:providesOutputData": {
			"@id": "iot:VoltageData"
		},
		"iot:writable" : "schema:False",
		"iot:observable" : "schema:Boolean"
	},
	{
		"@id": "iot:PhaseToPhaseVoltageCA",
		"@type": "rdfs:Class",
		"rdfs:comment": "The voltage between phases C and A (line-to-line voltages in a polyphase system).",
		"rdfs:label": "PhaseToPhaseVoltageCA",
		"rdfs:subClassOf": { "@id": "iot:Property" },
		"iot:providesOutputData": {
			"@id": "iot:VoltageData"
		},
		"iot:writable" : "schema:False",
		"iot:observable" : "schema:Boolean"
	},
	{
		"@id": "iot:AveragePhaseToNeutralVoltage",
		"@type": "rdfs:Class",
		"rdfs:comment": "The average voltage between phase (line) and neutral.",
		"rdfs:label": "AveragePhaseToNeutralVoltage",
		"rdfs:subClassOf": { "@id": "iot:Property" },
		"iot:providesOutputData": {
			"@id": "iot:VoltageData"
		},
		"iot:writable" : "schema:False",
		"iot:observable" : "schema:Boolean"
	},
	{
		"@id": "iot:AveragePhaseToPhaseVoltage",
		"@type": "rdfs:Class",
		"rdfs:comment": "The average voltage between two phases (line-to-line voltages in a polyphase system).",
		"rdfs:label": "AveragePhaseToPhaseVoltage",
		"rdfs:subClassOf": { "@id": "iot:Property" },
		"iot:providesOutputData": {
			"@id": "iot:VoltageData"
		},
		"iot:writable" : "schema:False",
		"iot:observable" : "schema:Boolean"
	},
	{
		"@id": "iot:ApparentEnergy",
		"@type": "rdfs:Class",
		"rdfs:comment": "The electric energy derived from apparent power over a period of time.",
		"rdfs:label": "ApparentEnergy",
		"rdfs:subClassOf": { "@id": "iot:Property" },
		"iot:providesOutputData": {
			"@id": "iot:ApparentEnergyData"
		},
		"iot:writable" : "schema:True",
		"iot:observable" : "schema:Boolean"
	},
	{
		"@id": "iot:ApparentEnergyData",
		"@type": "rdfs:Class",
		"rdfs:comment": "Apparent energy data.",
		"rdfs:label": "ApparentEnergyData",
		"rdfs:subClassOf": { "@id": "schema:PropertyValue" },
		"schema:propertyType": { "@id": "schema:Float" },
		"schema:unitCode": { "@id": "iot:ApparentEnergyUnit" }
	},
	{
		"@id": "iot:ActiveEnergyImported",
		"@type": "rdfs:Class",
		"rdfs:comment": "The electric energy derived from active power over a period of time, and imported (received).",
		"rdfs:label": "ActiveEnergyImported",
		"rdfs:subClassOf": { "@id": "iot:Property" },
		"iot:providesOutputData": {
			"@id": "iot:ActiveEnergyData"
		},
		"iot:writable" : "schema:True",
		"iot:observable" : "schema:Boolean"
	},
	{
		"@id": "iot:ActiveEnergyData",
		"@type": "rdfs:Class",
		"rdfs:comment": "Active energy data.",
		"rdfs:label": "ActiveEnergyData",
		"rdfs:subClassOf": { "@id": "schema:PropertyValue" },
		"schema:propertyType": { "@id": "schema:Float" },
		"schema:unitCode": { "@id": "iot:ActiveEnergyUnit" }
	},
	{
		"@id": "iot:ActiveEnergyExported",
		"@type": "rdfs:Class",
		"rdfs:comment": "The electric energy derived from active power over a period of time, and exported (delivered).",
		"rdfs:label": "ActiveEnergyExported",
		"rdfs:subClassOf": { "@id": "iot:Property" },
		"iot:providesOutputData": {
			"@id": "iot:ActiveEnergyData"
		},
		"iot:writable" : "schema:True",
		"iot:observable" : "schema:Boolean"
	},
	{
		"@id": "iot:ReactiveEnergyImported",
		"@type": "rdfs:Class",
		"rdfs:comment": "The electric energy derived from reactive power over a period of time, and imported (received).",
		"rdfs:label": "ReactiveEnergyImported",
		"rdfs:subClassOf": { "@id": "iot:Property" },
		"iot:providesOutputData": {
			"@id": "iot:ReactiveEnergyData"
		},
		"iot:writable" : "schema:True",
		"iot:observable" : "schema:Boolean"
	},
	{
		"@id": "iot:ReactiveEnergyData",
		"@type": "rdfs:Class",
		"rdfs:comment": "Reactive energy data.",
		"rdfs:label": "ReactiveEnergyData",
		"rdfs:subClassOf": { "@id": "schema:PropertyValue" },
		"schema:propertyType": { "@id": "schema:Float" },
		"schema:unitCode": { "@id": "iot:ReactiveEnergyUnit" }
	},
	{
		"@id": "iot:ReactiveEnergyExported",
		"@type": "rdfs:Class",
		"rdfs:comment": "The electric energy derived from reactive power over a period of time, and exported (delivered).",
		"rdfs:label": "ReactiveEnergyExported",
		"rdfs:subClassOf": { "@id": "iot:Property" },
		"iot:providesOutputData": {
			"@id": "iot:ReactiveEnergyData"
		},
		"iot:writable" : "schema:True",
		"iot:observable" : "schema:Boolean"
	}
  ]
}
